package org.njax.trinetco.netgrid.java.api;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import org.njax.trinetco.netgrid.java.app.models.UserRepository;
import org.njax.trinetco.netgrid.java.app.models.UserEntity;

@Controller // This means that this class is a Controller
@CrossOrigin // enable cors
@RequestMapping(path="/users")
public class UserController {
    @Autowired // This means to get the bean called UserRepository
               // Which is auto-generated by Spring, we will use it to handle the data
    private UserRepository UserRepository;


    @Autowired // https://www.vojtechruzicka.com/spring-boot-version/
    org.springframework.boot.info.BuildProperties buildProperties;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@RequestParam String name,
                                             @RequestParam String bio) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        UserEntity n = new UserEntity();
        n.setName(name);
        n.setBio(bio);
        UserRepository.save(n);
        return "Saved";
    }

    @GetMapping(path="")
    public @ResponseBody Iterable<UserEntity> getAllUsers() {
        // This returns a JSON or XML with the users
        return UserRepository.findAll();
    }

    @GetMapping(value = "/summary")
    public ResponseEntity<Object> root() {
        String responseString = "";

        responseString += "Count: " + UserRepository.count() + "<br>\n";
        responseString += "Cool, huh?" + "<br>\n";

        return new ResponseEntity<>(responseString, HttpStatus.OK);
        // return UserRepository.findAll();
    }

}
